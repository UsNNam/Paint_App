<Application
    x:Class="Simple_Paint.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Simple_Paint"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ui:ThemesDictionary Theme="Dark" />
                <ui:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CustomRadioButtonStyle" TargetType="RadioButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Grid>
                                <!--  Custom circle  -->
                                <Ellipse
                                    Width="20"
                                    Height="20"
                                    Fill="Red" />
                                <Ellipse
                                    x:Name="CheckedMark"
                                    Width="24"
                                    Height="24"
                                    Fill="Transparent"
                                    Stroke="Black"
                                    Visibility="Collapsed" />

                                <!--  Content  -->
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  Trigger to show checked mark when RadioButton is checked  -->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#333333" />
                <Setter Property="BorderBrush" Value="#444444" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Margin" Value="5" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

            <!--  Updated style for ComboBoxItem  -->
            <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
                <Setter Property="Height" Value="30" />
                <Setter Property="Background" Value="#444444" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>


            <!--  Define the RadioButton Style with a Trigger for when it is checked  -->
            <Style x:Key="ColorfulRadioButton" TargetType="RadioButton">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--  Trigger to change background when RadioButton is checked  -->
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="LightGreen" />
                        <!--  Change this value to desired color  -->
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ToolTipStyle" TargetType="ToolTip">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="BorderBrush" Value="Black" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="Padding" Value="6" />
            </Style>
            <Style x:Key="ToolbarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Margin" Value="2"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFEEEEEE"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" Value="#FFDDDDDD"/>
                                    <Setter Property="Foreground" Value="#FF0062CC"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
